{"version":3,"sources":["Components/Login.js","Components/Header.js","Components/CityItem.js","Components/Cities.js","App.js","Components/Examples.js","serviceWorker.js","stores/CovenStore.js","index.js"],"names":["Login","state","username","password","defaultP","message","messageType","login","e","preventDefault","console","log","props","history","push","alert","onChange","setState","target","name","value","className","type","placeholder","href","this","onClick","Component","Header","id","data-toggle","CityItem","launchModal","city","src","alt","data-target","Cities","inject","observer","cities","axios","get","then","res","states","data","length","i","key","setUnique","catch","err","arr","Array","Set","map","slice","index","Fragment","App","covenStore","style","minWidth","path","render","width","height","display","marginLeft","marginRight","textAlign","paddingLeft","exact","component","Boolean","window","location","hostname","match","store","author","addCity","observable","computed","action","Root","CovenStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0d51c1dd.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport Redirect from 'react-router-dom'\n\n\n class Login extends Component {\n    state ={\n        username:\"\",\n        password:\"\",\n        defaultP:\"demo\",\n        message:\"\",\n        messageType:0\n\n    }\n login=(e)=> {\n\n     e.preventDefault();\n     let {defaultP,username,password} = this.state;\n     console.log(this.state);\n     if (username===defaultP && password===defaultP) {\n      this.props.history.push('/dashboard')\n     }else{\n       alert(\"Invalid Username/Password\");\n     }\n     \n}\n\nonChange = (e)=>{\n\n    this.setState({[e.target.name]: e.target.value});\n    \n    \n}\n    render() {\n        return (\n            <div className='login'>\n                  <div>\n        <div className=\"login-page\">\n  <div className=\"form\">\n    <form className=\"register-form\">\n      <input type=\"text\" placeholder=\"name\"  />\n      <input type=\"password\" placeholder=\"password\" />\n      <input type=\"text\" placeholder=\"email address\"/>\n      <button>create</button>\n      <p className=\"message\">Already registered? <a href=\"#\">Sign In</a></p>\n    </form>\n    <form className=\"login-form\">\n\n          \n      <input type=\"text\" placeholder=\"username\" name=\"username\"onChange = {this.onChange}/>\n      <input type=\"password\" placeholder=\"password\" name=\"password\" onChange = {this.onChange}/>\n      <button onClick={this.login}>login</button>\n      <p className=\"message\">Not registered? <a href=\"#\">Create an account</a></p>\n    </form>\n  </div>\n</div>\n      </div>\n\n            </div>\n        )\n    }\n}\nexport default Login;","import React, { Component } from 'react'\n\n class Header extends Component {\n\t \n    render() {\n        return (\n            <div>\n                      <div>\n        <div>\n        </div>\n        <div>\n        <nav className=\"navbar navbar-default navbar-fixed-top topbar\">\n\t\t<div className=\"container-fluid\" >\n\n\t\t\t<div className=\"navbar-header\">\n\n\t\t\t\t<a href=\"/\" className=\"navbar-brand\">\n\t\t\t\t\t<span className=\"hidden-xs\">OpenSky</span>\n\t\t\t\t</a>\n\n\t\t\t\t{/* <p className=\"navbar-text\">\n\t\t\t\t\t<a href=\"#\" className=\"sidebar-toggle\">\n                        <i className=\"fa fa-bars\"></i>\n                    </a>\n\t\t\t\t</p> */}\n\n\t\t\t</div>\n\n\t\t\t<div className=\"navbar-collapse collapse\" id=\"navbar-collapse-main\">\n\n\t\t\t\t<ul className=\"nav navbar-nav navbar-right\">\n                    \n                    <li>\n                        {/* <button className=\"navbar-btn\"> */}\n                            {/* <i className=\"fa fa-bell\"></i> */}\n                            Logout\n                        {/* </button> */}\n                    </li>\n                    \n\t\t\t\t\t<li className=\"dropdown\">\n\t\t\t\t\t\t<button className=\"navbar-btn\" data-toggle=\"dropdown\">\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<ul className=\"dropdown-menu\">\n\t\t\t\t\t\t\t<li><a href=\"#\">Account</a></li>\n\t\t\t\t\t\t\t<li><a href=\"#\">Dashboard</a></li>\n\t\t\t\t\t\t\t<li className=\"nav-divider\"></li>\n\t\t\t\t\t\t\t<li><a href=\"#\">Logout</a></li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</li>\n\n\t\t\t\t</ul>\n\n\t\t\t</div>\n\t\t</div>\n\t</nav>\n\t\n        </div>\n      </div>\n            </div>\n        )\n    }\n}\nexport default Header;\n","import React, { Component } from 'react'\n\n\n class CityItem extends Component {\n\n    launchModal=(e)=> {\n        alert('Modal');\n    }\n    render() {\n        console.log(this.props.city);\n        let city =this.props.city;\n        \n        return (\n            \n                    <figure className=\"snip1396 blue hover\">\n                        <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/pr-sample19.jpg\" alt=\"pr-sample19\" />\n                    <div className=\"image\">\n                        <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/331810/pr-sample19.jpg\" alt=\"pr-sample19\" />\n                        </div>\n                    <figcaption>\n                        <h3>{city}</h3>\n                        <p>The Journey of a thousand miles starts in a day. </p>\n                        <input type=\"button\" className=\"btn btn-success\" onClick={this.launchModal} value=\"View Details\" data-toggle=\"modal\" data-target=\"#exampleModal\"/>\n                    </figcaption>\n                    \n                    {/* <div className=\"price\">\n                        <s>$24.00</s>$19.00\n                    </div> */}\n                    </figure>\n                    \n        \n        )\n    }\n}\n\n\nexport default CityItem;","import React, { Component } from 'react'\nimport CityItem from './CityItem'\n// import { observer } from 'mobx-react-lite';\nimport {observer,inject} from 'mobx-react'\nimport axios from 'axios'\n\n@inject('covenStore')\n@observer\n class Cities extends Component {\n     state={\ncities:[]\n     }\n\n    componentDidMount(){\n        \n        axios.get('https://opensky-network.org/api/states/all')\n        .then(res =>{\n          // console.log(res.data);\n          let {states} = res.data; \n                  var data = [];\n        var length = states.length; // user defined length\n          var k=0;\n          console.log(states);\n          \n        for(var i = 0; i < length; i++) {\n\n            console.log(states[i][2]);\n            \n            data.push({key:states[i][0],city:states[i][2]});\n            \n        }\n          console.log(data);\n          \n          \n          // this.setAll(data);\n          this.setUnique(data);\n          \n         \n        })\n        .catch(err=>{\n          console.log(err);\n          \n        });\n      }\n\n      logCities(){\n          console.log(this.state.cities);\n          \n      }\n      setAll(data){\n        this.setState({cities:[...data]});\n      }\n      setUnique(data){\n        let arr = new Array();\n        arr=[...new Set(data.map(city=>city.city))];\n          \n         this.setState({cities:[...(arr.slice(0, 10))]});\n      }\n    render() {\n      \n        return (this.state.cities.map((city, index) => \n        <React.Fragment>\n        \n        <CityItem key={index} city={city}/>\n\n        \n        </React.Fragment>\n        )\n      \n                    \n            \n        )\n    }\n}\n\nexport default Cities;","import React, { Component } from 'react'\nimport './App.css';\nimport {observer,inject} from 'mobx-react'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport Login from './Components/Login'\nimport Header from './Components/Header'\nimport axios from 'axios';\nimport Cities from './Components/Cities'\nimport Examples from './Components/Examples'\nimport Modal from 'react-bootstrap/Modal'\nimport {Button} from 'react-bootstrap'\n\n\n\n\n@inject('covenStore')\n\n\n\n@observer \n class App extends Component {\n   state={\n     states:[]\n   };\n  \n  \n    \n  \n  render() {\n    const {covenStore} = this.props; \n    console.log(covenStore);\n\n  \n    \n    return (\n      \n        \n      <div id=\"root\" style={{minWidth:'100%'}}>\n\n           {/* <Examples/> */}\n      <Router>\n<Route  path=\"/dashboard\" render={props =>(\n    <React.Fragment>\n    <div className=\"App\"  style={{width:'100%'}}>\n        <Header />\n        <div className=\"row koko col-lg-12 border \"style={{height:'auto',width:'100%',display:'flex', marginLeft:'auto',marginRight:'auto',textAlign:'center',paddingLeft: '120pt'}}>\n        <Cities style={{marginLeft:'auto',marginRight:'auto',textAlign:'center'}}/>\n        </div>\n       \n    </div>\n    </React.Fragment>\n    )}/>\n\n\n       \n     \n       <Route exact path=\"/\" component={Login}/>\n       </Router>\n       </div>\n    )\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport Modal from 'react-awesome-modal';\n\nexport default class Examples extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible : false\n        }\n    }\n\n    openModal() {\n        this.setState({\n            visible : true\n        });\n    }\n\n    closeModal() {\n        this.setState({\n            visible : false\n        });\n    }\n\n    render() {\n        return (\n            <section>\n                <h1>React-Modal Examples</h1>\n                <input type=\"button\" value=\"Open\" onClick={() => this.openModal()} />\n                <Modal \n                    visible={this.state.visible}\n                    width=\"400\"\n                    height=\"300\"\n                    effect=\"fadeInUp\"\n                    onClickAway={() => this.closeModal()}\n                >\n                    <div>\n                        <h1>Title</h1>\n                        <p>Some Contents</p>\n                        <a href=\"javascript:void(0);\" onClick={() => this.closeModal()}>Close</a>\n                    </div>\n                </Modal>\n            </section>\n        );\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import  {observable, action, computed } from 'mobx'\nimport axios from 'axios'\n\n class CovenStore  {\n@observable cities = [];\n@observable todos = [];\n@observable pendingRequests = 0;\n\n@observable author = null\n\n@computed get authorName() {\n  return this.author || 'Anonymous'\n}\n\n\n@action addCity(city) {\n    \n    this.cities =city;\n}\n\n@computed get AllCities(){\n    axios.get('https://opensky-network.org/api/states/all')\n      .then(res =>{\n        // console.log(res.data);\n        let {states} = res.data; \n        this.addCity(states);\n        // this.setState({states:states});\n        // this.sendCities;\n       \n      })\n      .catch(err=>{\n        console.log(err);\n        \n      });\n      return this.cities;\n}\n\n@computed get getCities(){\n    return this.cities;\n}\n}\n\nconst store = new CovenStore();\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'mobx-react';\nimport CovenStore from './stores/CovenStore'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst Root = (\n    <Provider covenStore = {CovenStore}>\n        <App/>\n    </Provider>\n);\n\nReactDOM.render(Root, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}